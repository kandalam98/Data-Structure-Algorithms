class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) 
    {
        Stack<Integer> s1=new  Stack();
        Stack<Integer> s2=new  Stack();
        ListNode first=l1;
        ListNode second=l2;
        while(first!=null)
        {
            s1.push(first.val);
            first=first.next;
        }
        while(second!=null)
        {
            s2.push(second.val);
            second=second.next;
        }
        int sum=0;
        int carry=0;
        ListNode res=null;
        ListNode prev=null;
        while(!s1.isEmpty() || !s2.isEmpty() || carry!=0)
        {
            sum=carry + (s1.isEmpty() ? 0 :s1.pop()) +(s2.isEmpty() ? 0 :s2.pop());
            carry=(sum>=10) ? 1 :0;
            ListNode temp=new ListNode(sum%10);
            temp.next=res;
            res=temp;
            
        }
        return res;
        
    }
}
